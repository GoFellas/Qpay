{
    "swagger": "2.0",
    "info": {
        "description": "This is API documentation for Project.",
        "title": "Qpay API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/admin/commission": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all commissions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List all commissions",
                "responses": {
                    "200": {
                        "description": "List of commissions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.CommissionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in getting commissions\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new commission with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a new commission",
                "parameters": [
                    {
                        "description": "Commission details",
                        "name": "commissionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CommissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created commission details",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommissionResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in creating commission\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/commission/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific commission by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get commission by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Commission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission details",
                        "schema": {
                            "$ref": "#/definitions/handlers.CommissionResponse"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Commission not found!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/gateway": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all gateways.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List all gateways",
                "responses": {
                    "200": {
                        "description": "List of gateways",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.GatewayResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in getting gateways\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/gateway/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific gateway by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get gateway by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gateway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway details",
                        "schema": {
                            "$ref": "#/definitions/handlers.GatewayResponse"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Gateway not found!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the status of a specific gateway by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update gateway status by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gateway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated status details",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated gateway details",
                        "schema": {
                            "$ref": "#/definitions/handlers.GatewayResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Status field is unsupported\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new admin with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a new admin",
                "parameters": [
                    {
                        "description": "Admin details",
                        "name": "adminRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "{\"status\": \"error\", \"message\": \"Invalid admin details\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "409": {
                        "description": "{\"status\": \"error\", \"message\": \"Username or email already exists\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in create admin\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/transaction": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all transactions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List all transactions",
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.TransactionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in getting transactions\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/transaction/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific transaction by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get transaction by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransactionResponse"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Transaction not found!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the status of a specific transaction by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update transaction status by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated status details",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated transaction details",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Status field is unsupported\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.UserResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in getting users\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific user by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"User not found!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the status of a specific user by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update user status by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated status details",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Status field is unsupported\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/bankaccount": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all bank accounts associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bankaccounts"
                ],
                "summary": "List all bank accounts for the authenticated user",
                "responses": {
                    "200": {
                        "description": "List of bank accounts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.BankAccountResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"You didn't add any bank account!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new bank account for the authenticated user with the provided SHEBA number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bankaccounts"
                ],
                "summary": "Register a new bank account for the authenticated user",
                "parameters": [
                    {
                        "description": "Bank account registration details",
                        "name": "bankAccountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.BankAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"status\": \"success\", \"message\": \"You're bank account is successfully registered!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Invalid SHEBA format\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "{\"status\": \"error\", \"message\": \"SHEBA doesn't match your credentials\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "409": {
                        "description": "{\"status\": \"error\", \"message\": \"SHEBA already exists\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in create bank account\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/bankaccount/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific bank account associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bankaccounts"
                ],
                "summary": "Find a bank account by ID for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank account details",
                        "schema": {
                            "$ref": "#/definitions/handlers.BankAccountResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bank account is not correct\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Bank account does not exist!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific bank account associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bankaccounts"
                ],
                "summary": "Delete a bank account by ID for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\": \"success\", \"message\": \"You're bank account is successfully deleted!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bank account is not correct\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Bank account does not exist!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/gateway": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all gateways associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateways"
                ],
                "summary": "List all gateways for the authenticated user",
                "responses": {
                    "200": {
                        "description": "List of gateways",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.GatewayResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"You didn't add any gateway. Please register a gateway!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new gateway with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateways"
                ],
                "summary": "Register a new gateway for the authenticated user",
                "parameters": [
                    {
                        "description": "Gateway details",
                        "name": "gatewayRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.GatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "{\"status\": \"error\", \"message\": \"Commission is incorrect\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in gateway\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/gateway/commission/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all active commissions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateways"
                ],
                "summary": "List all active commissions",
                "responses": {
                    "200": {
                        "description": "List of commissions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.CommissionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in getting commissions\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/gateway/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific gateway associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateways"
                ],
                "summary": "Find a gateway by ID for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gateway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gateway details",
                        "schema": {
                            "$ref": "#/definitions/handlers.GatewayResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Gateway ID is not correct\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Gateway does not exist!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update details of a specific gateway associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateways"
                ],
                "summary": "Update a gateway for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gateway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated gateway details",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Invalid gateway details\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/gateway/{id}/address": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Purchase an address for a specific gateway associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gateways"
                ],
                "summary": "Purchase an address for a gateway",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gateway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purchase address details",
                        "name": "purchaseAddressRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PurchaseAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Address already in use\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Log in a user using email/phone and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login details",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful, returns JWT token",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRes"
                        }
                    },
                    "400": {
                        "description": "{\"message\": \"Bad request\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Create a new user with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"status\": \"success\", \"message\": \"User created successfully\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "{\"status\": \"error\", \"message\": \"Validation Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "409": {
                        "description": "{\"status\": \"error\", \"message\": \"Conflict - User already exists\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in creating user\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/create/{route}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new transaction with the provided payment details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gateway route",
                        "name": "route",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction details",
                        "name": "transactionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "{\"status\": \"error\", \"message\": \"SHEBA doesn't match your credentials\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"No gateway with such route\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error in create transaction\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/filter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Filter transactions based on start date, end date, and payment amount range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Filter transactions for the authenticated user",
                "parameters": [
                    {
                        "description": "Filter criteria",
                        "name": "filterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of filtered transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.TransactionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/find/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve details of a specific transaction associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Find a transaction by ID for the authenticated user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Transaction ID is not correct\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Transaction does not exist!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a list of all transactions associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List all transactions for the authenticated user",
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.TransactionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"You don't have any transaction\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/start": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Begin a payment transaction with the provided payment details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Begin a payment transaction",
                "parameters": [
                    {
                        "description": "Payment transaction details",
                        "name": "transactionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PaymentTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment transaction details",
                        "schema": {
                            "$ref": "#/definitions/handlers.PaymentTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Invalid transaction details\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "{\"status\": \"error\", \"message\": \"Transaction is Canceled\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/start/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get transaction details to start a payment transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction details for starting a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details for start",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransactionStartResponse"
                        }
                    },
                    "500": {
                        "description": "{\"status\": \"error\", \"message\": \"Internal server error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/transaction/verify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verify a transaction by tracking code and retrieve its details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Verify a transaction by tracking code",
                "parameters": [
                    {
                        "description": "Verification request",
                        "name": "verifyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VerifyTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/handlers.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "{\"status\": \"error\", \"message\": \"Bind Error\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "{\"status\": \"error\", \"message\": \"Transaction does not exist!\"}",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AdminRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.BankAccountRequest": {
            "type": "object",
            "properties": {
                "sheba": {
                    "type": "string"
                }
            }
        },
        "handlers.BankAccountResponse": {
            "type": "object",
            "properties": {
                "account_owner": {
                    "type": "string"
                },
                "bank_logo": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "sheba": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.CommissionRequest": {
            "type": "object",
            "properties": {
                "amount_per_transaction": {
                    "type": "number"
                },
                "percent_per_transaction": {
                    "type": "number"
                }
            }
        },
        "handlers.CommissionResponse": {
            "type": "object",
            "properties": {
                "Percent_per_transaction": {
                    "type": "number"
                },
                "amount_per_transaction": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "payment_amount": {
                    "type": "number"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateTransactionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "handlers.FilterRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "max_amount": {
                    "type": "number"
                },
                "min_amount": {
                    "type": "number"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "handlers.GatewayRequest": {
            "type": "object",
            "properties": {
                "bank_account_id": {
                    "type": "integer"
                },
                "commission_id": {
                    "type": "integer"
                },
                "is_personal": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.GatewayResponse": {
            "type": "object",
            "properties": {
                "bank_account": {
                    "$ref": "#/definitions/handlers.BankAccountResponse"
                },
                "commission": {
                    "$ref": "#/definitions/handlers.CommissionResponse"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "route": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.LoginReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginRes": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.PaymentTransactionRequest": {
            "type": "object",
            "properties": {
                "card_month": {
                    "type": "integer"
                },
                "card_year": {
                    "type": "integer"
                },
                "cvv2": {
                    "type": "integer"
                },
                "password": {
                    "type": "integer"
                },
                "payment_confirmation": {
                    "description": "دستور پرداخت و کم کردن موجودی (کنسل تراکنش - پرداخت)",
                    "type": "boolean"
                },
                "purchaser_card": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.PaymentTransactionResponse": {
            "type": "object",
            "properties": {
                "payment_amount": {
                    "type": "number"
                },
                "purchaser_card": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tracking_code": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.PurchaseAddressRequest": {
            "type": "object",
            "properties": {
                "route": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "address",
                "email",
                "identity",
                "is_company",
                "name",
                "password",
                "phone_number",
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "is_company": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.StatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.TransactionResponse": {
            "type": "object",
            "properties": {
                "payment_amount": {
                    "type": "number"
                },
                "payment_date": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "purchaser_card": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tracking_code": {
                    "type": "string"
                }
            }
        },
        "handlers.TransactionStartResponse": {
            "type": "object",
            "properties": {
                "owner_name": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number"
                }
            }
        },
        "handlers.UpdateGatewayRequest": {
            "type": "object",
            "properties": {
                "bank_account_id": {
                    "type": "integer"
                },
                "commission_id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UserResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.VerifyTransactionRequest": {
            "type": "object",
            "properties": {
                "tracking_code": {
                    "type": "string"
                }
            }
        }
    }
}